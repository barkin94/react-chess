name: CI-CD

on:
  pull_request:
    types:
      - closed
    branches:
      - main

env:
  PROJECT_NAME: ${{ github.event.repository.name }}
  USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  PASSWORD: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image and save as tar
        uses: docker/build-push-action@v3
        with:
          context: ./
          file: ./nginx/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          build-args: |
            SOCKET_URL=${{ secrets.SOCKET_URL }}
          outputs: type=docker,dest=/tmp/${{ github.sha }}.tar
        
      - name: Store the built image for deployment
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.sha }}
          path: /tmp/${{ github.sha }}.tar

  tag-and-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Conventional Changelog Action
        id: changelog
        uses: TriPSs/conventional-changelog-action@v3
        with:
          github-token: ${{ secrets.github_token }}
          skip-git-pull: "true"

      - name: Create Release
        uses: actions/create-release@v1
        if: ${{ steps.changelog.outputs.skipped == 'false' }}
        env:
          GITHUB_TOKEN: ${{ secrets.github_token }}
        with:
          tag_name: ${{ steps.changelog.outputs.tag }}
          release_name: ${{ steps.changelog.outputs.tag }}
          body: ${{ steps.changelog.outputs.clean_changelog }}

  azure-deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
      
      - name: Get the built image
        uses: actions/download-artifact@v2
        with:
          name: ${{ github.sha }}
          path: /tmp
      
      - name: Load the image and push to Docker Hub
        run: |
          docker load --input /tmp/${{ github.sha }}.tar
          docker image ls -a
          docker push ${{ env.USERNAME }}/${{ env.PROJECT_NAME }}:${{ github.sha }}

      - name: Deploy to Azure Web App from Docker Hub
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'react-chess'
          slot-name: 'production'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: 'index.docker.io/${{ env.USERNAME }}/${{ env.PROJECT_NAME }}:${{ github.sha }}'
